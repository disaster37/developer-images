
name: Build Developer Images

on:
  push:
    branches: [ main ]

jobs:
  list-manifests-base:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls base | jq -R -s -c 'split("\n")[:-1]')"
  list-manifests-universal:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v3
      - id: set-matrix
        run: echo "::set-output name=matrix::$(ls universal | jq -R -s -c 'split("\n")[:-1]')"

  build_base_image:
    name: Build and publish base image to Quay.io
    runs-on: ubuntu-latest
    needs: list-manifests-base
    strategy:
      fail-fast: false
      matrix:
        manifest: ${{ fromJson(needs.list-manifests-base.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            quay.io/webcenter/developer-image
          flavor: |
            latest=true
            prefix=base-${{ matrix.manifest }}-,onlatest=true
          tags: |
            type=ref,event=branch,prefix=base-${{ matrix.manifest }}-
            type=ref,event=tag,prefix=base-${{ matrix.manifest }}-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Quay.io
        uses: docker/login-action@v1 
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Docker Build & Push Base
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: base/${{ matrix.manifest }}
          tags: |
            ${{ steps.meta.outputs.tags }}

  build_universal_image:
    name: Build and publish universal image to Quay.io
    runs-on: ubuntu-latest
    needs: 
      - list-manifests-universal
      - build_base_image
    strategy:
      fail-fast: false
      matrix:
        manifest: ${{ fromJson(needs.list-manifests-universal.outputs.matrix) }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: |
            quay.io/webcenter/developer-image
          flavor: |
            latest=true
            prefix=${{ matrix.manifest }}-,onlatest=true
          tags: |
            type=ref,event=branch,prefix=${{ matrix.manifest }}-
            type=ref,event=tag,prefix=${{ matrix.manifest }}-
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Quay.io
        uses: docker/login-action@v1 
        with:
          registry: quay.io
          username: ${{ secrets.QUAY_USERNAME }}
          password: ${{ secrets.QUAY_PASSWORD }}
      - name: Docker Build & Push Universal
        uses: docker/build-push-action@v2
        with:
          push: ${{ github.event_name != 'pull_request' }}
          context: universal/${{ matrix.manifest }}
          tags: |
            ${{ steps.meta.outputs.tags }}
